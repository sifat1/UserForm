@using System.Globalization
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.AspNetCore.Mvc.Rendering
@inject IViewLocalizer Localizer

@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var currentCulture = requestCulture?.RequestCulture.UICulture.Name ?? "en-US";
    var cultureItems = new List<SelectListItem>
    {
        new SelectListItem { Value = "en-US", Text = "English" },
        new SelectListItem { Value = "pl-PL", Text = "Polish" }
    };

    var returnUrl = Context.Request.Path + Context.Request.QueryString;
}

<!DOCTYPE html>
<html lang="@currentCulture">
<head>
    <meta charset="utf-8" />
    <title>@ViewData["Title"] - @Localizer["AppName"]</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link id="bootstrap-theme" href="https://cdn.jsdelivr.net/npm/bootswatch@5.3.3/dist/flatly/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />
    <style>
        .language-switcher {
            margin-left: 15px;
        }
        .language-switcher select {
            padding: 5px;
            border-radius: 4px;
            border: 1px solid #6c757d;
            background-color: #343a40;
            color: white;
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <div class="container-fluid">
            <a class="navbar-brand" href="/">@Localizer["AppName"]</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto align-items-center">
                    <form class="d-flex me-2" method="get" asp-controller="FormManage" asp-action="List">
                        <input class="form-control me-2" type="search" name="search" placeholder="@Localizer["SearchPlaceholder"]"/>
                        <button class="btn btn-outline-light" type="submit">@Localizer["Search"]</button>
                    </form>
                    @if (User.Identity?.IsAuthenticated == true)
                    {
                        if (User.IsInRole("Admin"))
                        {
                            <li class="nav-item">
                                <a class="nav-link" asp-controller="Admin"
                                   asp-action="Admin">@Localizer["ManageUsers"]</a>
                            </li>
                        }

                        <li class="nav-item">
                            <span class="nav-link text-light">@Localizer["Hello"], @User.Identity.Name</span>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" asp-controller="MyDashboard" asp-action="MyForms">@Localizer["MyForms"]</a>
                        </li>
                        <li class="nav-item">
                            <form method="post" asp-controller="Account" asp-action="Logout" class="d-inline">
                                <button type="submit" class="btn btn-link nav-link">@Localizer["Logout"]</button>
                            </form>
                        </li>
                    }
                    else
                    {
                        <li class="nav-item">
                            <a class="nav-link" asp-controller="Account" asp-action="Login">@Localizer["Login"]</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" asp-controller="Account" asp-action="Register">@Localizer["Register"]</a>
                        </li>
                    }
                </ul>
                <div class="form-check form-switch text-light me-3">
                    <input class="form-check-input" type="checkbox" id="themeToggle">
                    <label class="form-check-label" for="themeToggle">Dark Mode</label>
                </div>
                <form id="cultureForm" asp-controller="FormManage" asp-action="SetLanguage"
                      asp-route-returnUrl="@returnUrl" method="post" class="language-switcher">
                    <select name="culture" onchange="this.form.submit()" class="form-select bg-dark text-white border-light">
                        @foreach (var culture in cultureItems)
                        {
                            <option value="@culture.Value" selected="@(culture.Value == currentCulture)">
                                @culture.Text
                            </option>
                        }
                    </select>
                </form>
            </div>
        </div>
    </nav>

    <div class="container mt-5">
        @RenderBody()
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    @RenderSection("Scripts", required: false)
    <script>
        const toggle = document.getElementById("themeToggle");
        const themeLink = document.getElementById("bootstrap-theme");
        const savedTheme = localStorage.getItem("theme") || "flatly";
        themeLink.href = `https://cdn.jsdelivr.net/npm/bootswatch@5.3.3/dist/${savedTheme}/bootstrap.min.css`;
        toggle.checked = savedTheme === "darkly";
        toggle.addEventListener("change", () => {
            const selectedTheme = toggle.checked ? "darkly" : "flatly";
            themeLink.href = `https://cdn.jsdelivr.net/npm/bootswatch@5.3.3/dist/${selectedTheme}/bootstrap.min.css`;
            localStorage.setItem("theme", selectedTheme);
        });
    </script>
</body>
</html>
