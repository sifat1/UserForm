@model UserForm.DTOS.CreateFormDto

@{
    Layout = "_Blank";
    ViewData["Title"] = "Edit Form";
}

<h4>Edit Form</h4>

@Html.Partial("_CreateFormPartial", Model)

@section Scripts {
    <script src="~/js/questionadd.js" asp-append-version="true"></script>
    <script>
    document.addEventListener("DOMContentLoaded", function () {
        const initialTags = "@(Model.Tags ?? "")"
            .split(',')
            .map(t => t.trim())
            .filter(t => t.length > 0);

        const modelQuestions = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Questions ?? new List<UserForm.DTOS.QuestionDto>()));

        
        formBuilder.tags = initialTags;
        formBuilder.initializeForm(modelQuestions, initialTags);

       
        const tagInput = document.getElementById("tag-input");
        if (tagInput) {
            tagInput.addEventListener("keydown", function (e) {
                if (e.key === "Enter" || e.key === ",") {
                    e.preventDefault();
                    const value = e.target.value.trim();
                    if (value && !formBuilder.tags.includes(value)) {
                        formBuilder.tags.push(value);
                        e.target.value = '';
                        formBuilder.updateTagUI();
                    }
                }
            });
        }

        formBuilder.removeTag = function(index) {
            formBuilder.tags.splice(index, 1);
            formBuilder.updateTagUI();
        };

        
        document.getElementById("add-question")?.addEventListener("click", formBuilder.addQuestion);
        document.getElementById("delete-selected")?.addEventListener("click", function () {
            document.querySelectorAll(".delete-checkbox:checked").forEach(cb =>
                cb.closest(".question-block")?.remove()
            );
        });

        formBuilder.setupQuestionTypeChangeHandler();
    });
</script>

}