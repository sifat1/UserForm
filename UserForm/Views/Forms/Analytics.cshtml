@model UserForm.ViewModels.Analytics.FormAnalyticsViewModel

@{
    Layout = "_Blank";
    ViewData["Title"] = "Form Analytics";
    var chartIndex = 0;
}

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<div class="container py-5">
    <div class="card bg-light shadow-sm border-0 mb-5">
        <div class="card-body">
            <h2 class="text-dark fw-bold mb-3"> Analytics for <span class="text-primary">@Model.FormTitle</span></h2>
            <div class="row">
                <div class="col-md-4">
                    <p><strong> Topic:</strong> <span class="text-muted">@Model.FormTopic</span></p>
                </div>
                <div class="col-md-4">
                    <p><strong> Total Questions:</strong> <span class="text-muted">@Model.Questions.Count</span></p>
                </div>
                <div class="col-md-4">
                    <p><strong> Total Responses:</strong> <span class="text-muted">@Model.TotalResponses</span></p>
                </div>
            </div>
        </div>
    </div>

    @foreach (var q in Model.Questions)
    {
        var id = $"chart{chartIndex++}";
        <div class="card border-start border-4 border-primary shadow-sm mb-4">
            <div class="card-body">
                <h5 class="card-title">@q.QuestionText</h5>
                <p class="text-muted mb-3">Type: <span class="badge bg-secondary">@q.QuestionType</span></p>

                @if (q.QuestionType == "Number")
                {
                    <p><strong> Average value:</strong> <span class="text-success">@((q.AverageNumberAnswer?.ToString("F2")) ?? "N/A")</span></p>
                }
                else if (q.QuestionType == "MultipleChoice")
                {
                    <canvas id="@id" height="200"></canvas>

                    <script>
                        const ctx@chartIndex = document.getElementById('@id').getContext('2d');
                        new Chart(ctx@chartIndex, {
                            type: 'bar',
                            data: {
                                labels: [@string.Join(",", q.OptionFrequency.Keys.Select(k => $"'{k}'"))],
                                datasets: [{
                                    label: 'Responses',
                                    data: [@string.Join(",", q.OptionFrequency.Values)],
                                    backgroundColor: 'rgba(54, 162, 235, 0.5)',
                                    borderColor: 'rgba(54, 162, 235, 1)',
                                    borderWidth: 1
                                }]
                            },
                            options: {
                                responsive: true,
                                scales: {
                                    y: {
                                        beginAtZero: true,
                                        ticks: {
                                            stepSize: 1
                                        }
                                    }
                                },
                                plugins: {
                                    legend: {
                                        display: false
                                    },
                                    title: {
                                        display: false
                                    }
                                }
                            }
                        });
                    </script>
                }
                else if (q.QuestionType == "Text")
                {
                    <p><strong> Total text responses:</strong> @q.OptionFrequency.Values.Sum()</p>
                }
            </div>
        </div>
    }
</div>
